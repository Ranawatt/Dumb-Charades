<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.dumb_charades">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".directshare.SendMessageActivity"
            android:label="@string/app_name"
            android:theme="@style/DirectShareDialogTheme">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="text/plain" />
            </intent-filter>
            <!-- Only needed if you import the sharetarget AndroidX library that provides
                 backwards compatibility with the old DirectShare API.
                 The activity that receives the Sharing Shortcut intent needs to be taken into
                 account with this chooser target provider. -->
            <meta-data
                android:name="android.service.chooser.chooser_target_service"
                android:value="androidx.sharetarget.ChooserTargetServiceCompat" />
        </activity>
        <activity android:name=".directshare.SelectContactActivity"
            android:label="@string/app_name"
            android:theme="@style/DirectShareDialogTheme"/>
        <activity android:name=".directshare.DShareActivity">
<!--            <intent-filter>-->
<!--                <action android:name="android.intent.action.MAIN" />-->
<!--                <category android:name="android.intent.category.LAUNCHER" />-->
<!--            </intent-filter>-->
            <!-- Reference resource file where the app's shortcuts are defined -->
            <meta-data
                android:name="android.app.shortcuts"
                android:resource="@xml/shortcuts" />
        </activity>
        <activity android:name=".adaptiveicons.AdaptiveIconActivity">
<!--            <intent-filter>-->
<!--                <action android:name="android.intent.action.MAIN" />-->

<!--                <category android:name="android.intent.category.LAUNCHER" />-->
<!--            </intent-filter>-->
        </activity>
        <activity android:name=".LoginActivity">

             <intent-filter>
             <action android:name="android.intent.action.MAIN" />


             <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
        </activity>
        <activity android:name=".MainActivity">
<!--             <intent-filter>-->
<!--             <action android:name="android.intent.action.MAIN" />-->
<!--             <category android:name="android.intent.category.LAUNCHER" />-->
<!--             </intent-filter>-->
        </activity>

        <!-- Only needed if you want to add a thumbnail to the direct share.
          FileProvider is a subclass of ContentProvider that facilitates secure sharing.
          Here we specify a FileProvider for our app.
          The file_paths xml resource specifies the directories the FileProvider
          can generate content URIs for. -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.example.android.directshare.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>
    </application>

</manifest>